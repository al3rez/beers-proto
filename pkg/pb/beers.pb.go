// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/pb/beers.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_OK  Status = 0
	Status_BAD Status = 1
)

var Status_name = map[int32]string{
	0: "OK",
	1: "BAD",
}

var Status_value = map[string]int32{
	"OK":  0,
	"BAD": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_75daee14f32918a9, []int{0}
}

type BeerAddResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               Status   `protobuf:"varint,3,opt,name=status,proto3,enum=pb.Status" json:"status,omitempty"`
	ErrMsg               string   `protobuf:"bytes,4,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeerAddResponse) Reset()         { *m = BeerAddResponse{} }
func (m *BeerAddResponse) String() string { return proto.CompactTextString(m) }
func (*BeerAddResponse) ProtoMessage()    {}
func (*BeerAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75daee14f32918a9, []int{0}
}

func (m *BeerAddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeerAddResponse.Unmarshal(m, b)
}
func (m *BeerAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeerAddResponse.Marshal(b, m, deterministic)
}
func (m *BeerAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeerAddResponse.Merge(m, src)
}
func (m *BeerAddResponse) XXX_Size() int {
	return xxx_messageInfo_BeerAddResponse.Size(m)
}
func (m *BeerAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BeerAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BeerAddResponse proto.InternalMessageInfo

func (m *BeerAddResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BeerAddResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BeerAddResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

func (m *BeerAddResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type BeerAddRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeerAddRequest) Reset()         { *m = BeerAddRequest{} }
func (m *BeerAddRequest) String() string { return proto.CompactTextString(m) }
func (*BeerAddRequest) ProtoMessage()    {}
func (*BeerAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75daee14f32918a9, []int{1}
}

func (m *BeerAddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeerAddRequest.Unmarshal(m, b)
}
func (m *BeerAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeerAddRequest.Marshal(b, m, deterministic)
}
func (m *BeerAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeerAddRequest.Merge(m, src)
}
func (m *BeerAddRequest) XXX_Size() int {
	return xxx_messageInfo_BeerAddRequest.Size(m)
}
func (m *BeerAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BeerAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BeerAddRequest proto.InternalMessageInfo

func (m *BeerAddRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.Status", Status_name, Status_value)
	proto.RegisterType((*BeerAddResponse)(nil), "pb.BeerAddResponse")
	proto.RegisterType((*BeerAddRequest)(nil), "pb.BeerAddRequest")
}

func init() { proto.RegisterFile("pkg/pb/beers.proto", fileDescriptor_75daee14f32918a9) }

var fileDescriptor_75daee14f32918a9 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x9b, 0x6c, 0x9b, 0xe2, 0x1c, 0xd6, 0x32, 0x1e, 0x8c, 0x9e, 0x96, 0xe0, 0x61, 0xf1,
	0xb0, 0x95, 0x7a, 0xf2, 0xb8, 0xc5, 0x9b, 0x88, 0x10, 0x7f, 0x80, 0x34, 0x64, 0x58, 0x8a, 0xb4,
	0x1b, 0x67, 0xd2, 0xff, 0x2f, 0x4d, 0xa5, 0xd2, 0xdb, 0xf0, 0x86, 0xf7, 0x7d, 0x3c, 0xc0, 0xf4,
	0x3d, 0x2c, 0x53, 0x58, 0x06, 0x22, 0x96, 0x2e, 0xf1, 0x98, 0x47, 0xd4, 0x29, 0x38, 0x86, 0xeb,
	0x35, 0x11, 0xf7, 0x31, 0x7a, 0x92, 0x34, 0xee, 0x85, 0xb0, 0x06, 0xbd, 0x8d, 0x56, 0x35, 0xaa,
	0x9d, 0x79, 0xbd, 0x8d, 0x88, 0x30, 0xdd, 0x6f, 0x76, 0x64, 0x75, 0xa3, 0xda, 0x2b, 0x5f, 0x6e,
	0x74, 0x60, 0x24, 0x6f, 0xf2, 0x41, 0x6c, 0xd5, 0xa8, 0xb6, 0x5e, 0x41, 0x97, 0x42, 0xf7, 0x59,
	0x12, 0xff, 0xf7, 0xc1, 0x5b, 0x98, 0x13, 0xf3, 0xd7, 0x4e, 0x06, 0x3b, 0x2d, 0x55, 0x43, 0xcc,
	0xef, 0x32, 0xb8, 0x07, 0xa8, 0xcf, 0xce, 0x9f, 0x03, 0x49, 0x3e, 0x2b, 0xd4, 0xbf, 0xe2, 0xf1,
	0x0e, 0xcc, 0x09, 0x88, 0x06, 0xf4, 0xc7, 0xdb, 0x62, 0x82, 0x73, 0xa8, 0xd6, 0xfd, 0xeb, 0x42,
	0xad, 0x5e, 0x60, 0x76, 0x04, 0x08, 0x3e, 0x41, 0xd5, 0xc7, 0x88, 0x78, 0xb4, 0x5f, 0x22, 0xef,
	0x6f, 0x2e, 0xb2, 0xd3, 0x34, 0x37, 0x09, 0xa6, 0x4c, 0x7f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x82, 0x0a, 0x34, 0xde, 0x10, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BeersClient is the client API for Beers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BeersClient interface {
	Add(ctx context.Context, in *BeerAddRequest, opts ...grpc.CallOption) (*BeerAddResponse, error)
}

type beersClient struct {
	cc *grpc.ClientConn
}

func NewBeersClient(cc *grpc.ClientConn) BeersClient {
	return &beersClient{cc}
}

func (c *beersClient) Add(ctx context.Context, in *BeerAddRequest, opts ...grpc.CallOption) (*BeerAddResponse, error) {
	out := new(BeerAddResponse)
	err := c.cc.Invoke(ctx, "/pb.Beers/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BeersServer is the server API for Beers service.
type BeersServer interface {
	Add(context.Context, *BeerAddRequest) (*BeerAddResponse, error)
}

// UnimplementedBeersServer can be embedded to have forward compatible implementations.
type UnimplementedBeersServer struct {
}

func (*UnimplementedBeersServer) Add(ctx context.Context, req *BeerAddRequest) (*BeerAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}

func RegisterBeersServer(s *grpc.Server, srv BeersServer) {
	s.RegisterService(&_Beers_serviceDesc, srv)
}

func _Beers_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeerAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeersServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Beers/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeersServer).Add(ctx, req.(*BeerAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Beers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Beers",
	HandlerType: (*BeersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Beers_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/pb/beers.proto",
}
